name: Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Configure Poetry
        run: poetry config virtualenvs.create true

      - name: Install dependencies
        run: poetry install

      - name: install libml
        run: pip install -i https://test.pypi.org/simple/ libml-URLPhishing==0.2.1

      - name: Install pdoc
        run: poetry add --dev pdoc3

      - name: Generate documentation
        run: pdoc --html src --output-dir docs

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: ./docs/model-service

      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=${GITHUB_REF:11}
          MAJOR=`echo "$VERSION" | cut -d . -f 1`
          MINOR=`echo "$VERSION" | cut -d . -f 2`
          PATCH=`echo "$VERSION" | cut -d . -f 3`
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Login to Github registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Convert repository name to lowercase
        run: |
          echo "REPO_LC=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Build and Push Docker Image
        run: |
          IMG=ghcr.io/$REPO_LC
          docker build \
          --tag $IMG:${{ env.version }} \
          --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
          --tag $IMG:${{ env.version_major }}.latest \
          --tag $IMG:latest \
          .
          docker push --all-tags $IMG

  
  deploy-docs:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4

      - name: Install Requirements
        run: |
          pip install -r requirements.txt

      - name: Install pdoc
        run: |
          pip install pdoc3

      - name: Generate Docs
        run: |
          pdoc src --html --force --output-dir docs

      - name: Deploy Docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: ./docs/src